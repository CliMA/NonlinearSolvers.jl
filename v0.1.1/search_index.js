var documenterSearchIndex = {"docs":
[{"location":"#NonlinearSolvers.jl","page":"Home","title":"NonlinearSolvers.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A simple GPU-friendly package for solving systems of non-linear equations.","category":"page"},{"location":"API/#API","page":"API","title":"API","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = NonlinearSolvers","category":"page"},{"location":"API/","page":"API","title":"API","text":"NonlinearSolvers","category":"page"},{"location":"API/#NonlinearSolvers.NonlinearSolvers","page":"API","title":"NonlinearSolvers.NonlinearSolvers","text":"NonlinearSolvers\n\nA set of solvers for systems of non-linear equations\n\n\n\n\n\n","category":"module"},{"location":"API/#Numerical-Methods","page":"API","title":"Numerical Methods","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"NewtonsMethod\nNewtonsMethodAD","category":"page"},{"location":"API/#NonlinearSolvers.NewtonsMethod","page":"API","title":"NonlinearSolvers.NewtonsMethod","text":"NewtonsMethod(\n        f!::F!,\n        j!::J!,\n        x_init::A,\n    ) where {F! <: Function, J! <: Function, A <: AbstractArray}\n\nA non-linear system of equations type.\n\nFields\n\nf!\nFunction to find the root of\nj!\nJacobian of f!\nx_init\nInitial guess\nx1\nStorage\nJ\nStorage\nJ⁻¹\nStorage\nF\nStorage\n\n\n\n\n\n","category":"type"},{"location":"API/#NonlinearSolvers.NewtonsMethodAD","page":"API","title":"NonlinearSolvers.NewtonsMethodAD","text":"NewtonsMethodAD(f!::F!, x_init::A) where {F!, A <: AbstractArray}\n\nA non-linear system of equations type.\n\nFields\n\nf!\nFunction to find the root of\nx_init\nInitial guess\nx1\nStorage\nJ\nStorage\nJ⁻¹\nStorage\nF\nStorage\n\n\n\n\n\n","category":"type"},{"location":"API/#Solve","page":"API","title":"Solve","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"solve!","category":"page"},{"location":"API/#NonlinearSolvers.solve!","page":"API","title":"NonlinearSolvers.solve!","text":"solve!(\n    method::AbstractNonlinearSolverMethod{FT},\n    soltype::SolutionType = CompactSolution(),\n    tol::Union{Nothing, AbstractTolerance} = nothing,\n    maxiters::Union{Nothing, Int} = 10_000,\n)\n\nSolve the non-linear system given\n\nmethod the numerical method\nsoltype the solution type (CompactSolution or VerboseSolution)\ntol the stopping tolerance\nmaxiters the maximum number of iterations to perform\n\n\n\n\n\n","category":"function"},{"location":"API/#Solution-types","page":"API","title":"Solution types","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CompactSolution\nVerboseSolution","category":"page"},{"location":"API/#NonlinearSolvers.CompactSolution","page":"API","title":"NonlinearSolvers.CompactSolution","text":"CompactSolution <: SolutionType\n\nUsed to return a CompactSolutionResults\n\n\n\n\n\n","category":"type"},{"location":"API/#NonlinearSolvers.VerboseSolution","page":"API","title":"NonlinearSolvers.VerboseSolution","text":"VerboseSolution <: SolutionType\n\nUsed to return a VerboseSolutionResults\n\nnote: Note\nVerboseSolution is designed for debugging purposes only, and is not GPU-friendly.\n\n\n\n\n\n","category":"type"},{"location":"API/#Results-types","page":"API","title":"Results types","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CompactSolutionResults\nVerboseSolutionResults","category":"page"},{"location":"API/#NonlinearSolvers.CompactSolutionResults","page":"API","title":"NonlinearSolvers.CompactSolutionResults","text":"CompactSolutionResults{AT} <: AbstractSolutionResults{AT}\n\nResult returned from find_zero when CompactSolution is passed as the soltype.\n\n\n\n\n\n","category":"type"},{"location":"API/#NonlinearSolvers.VerboseSolutionResults","page":"API","title":"NonlinearSolvers.VerboseSolutionResults","text":"VerboseSolutionResults{AT} <: AbstractSolutionResults{AT}\n\nResult returned from find_zero when VerboseSolution is passed as the soltype.\n\n\n\n\n\n","category":"type"},{"location":"API/#Stopping-conditions-(tolerances)","page":"API","title":"Stopping conditions (tolerances)","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"ResidualTolerance\nSolutionTolerance","category":"page"},{"location":"API/#NonlinearSolvers.ResidualTolerance","page":"API","title":"NonlinearSolvers.ResidualTolerance","text":"ResidualTolerance\n\nA tolerance type based on the residual of the equation f(x) = 0\n\n\n\n\n\n","category":"type"},{"location":"API/#NonlinearSolvers.SolutionTolerance","page":"API","title":"NonlinearSolvers.SolutionTolerance","text":"SolutionTolerance\n\nA tolerance type based on the solution x of the equation f(x) = 0\n\n\n\n\n\n","category":"type"}]
}
